name: 'spotify-library-manager'

services:

  database:
    build:
      context: .
      dockerfile: build/database/Dockerfile
    container_name: ${COMPOSE_PROJECT_NAME}-database
    ports:
      - 5432:5432
    environment:
      POSTGRES_USER: BSLM-User
      POSTGRES_PASSWORD: BSLM-Password
      POSTGRES_DB: spotify_library_manager
    networks:
      - network
    volumes:
      - database-data:/var/lib/postgresql/data

  frontend:
    build:
      args:
          USER_ID: ${USER_ID:-0}
          GROUP_ID: ${GROUP_ID:-0}
          USER_NAME: ${USER_NAME:-0}
          GROUP_NAME: ${GROUP_NAME:-0}
      context: .
      dockerfile: build/frontend/Dockerfile
    image: ${COMPOSE_PROJECT_NAME}-frontend
    container_name: ${COMPOSE_PROJECT_NAME}-frontend
    ports:
      - 5173:5173
    volumes:
      - ./frontend:/app
    command: sh -c 'yarn install && yarn dev --host'
    networks:
        - network

  api: # nestjs with prisma
    depends_on:
      - database
    build:
      args:
          USER_ID: ${USER_ID:-0}
          GROUP_ID: ${GROUP_ID:-0}
          USER_NAME: ${USER_NAME:-0}
          GROUP_NAME: ${GROUP_NAME:-0}
      context: .
      dockerfile: build/api/Dockerfile
    image: ${COMPOSE_PROJECT_NAME}-api
    container_name: ${COMPOSE_PROJECT_NAME}-api
    ports:
      - 3000:3000
    volumes:
        - ./api:/app
    # command: sh -c 'yarn install && yarn prisma:migrate && yarn prisma:generate && yarn start:dev' // when there is at least one entity (model)
    command: sh -c 'yarn install && yarn start:dev'
    networks:
        - network

networks:
  network:
    name: ${COMPOSE_PROJECT_NAME}-network
    driver: bridge

volumes:
    database-data:
        name: ${COMPOSE_PROJECT_NAME}-database-data
        driver: local
